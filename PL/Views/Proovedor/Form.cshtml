@model BL.Proovedor
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Proovedores</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Proovedor", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Codigo)
                            @Html.TextBoxFor(model => model.Codigo, new { @class = "form-control", @id = "txtCodigo", autocomplete = "off" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RazonSocial)
                            @Html.TextBoxFor(model => model.RazonSocial, new { @class = "form-control", @id = "txtRazonSocial", autocomplete = "off" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RFC, new { @class = "", @id = "lblRFC" })
                            @Html.TextBoxFor(model => model.RFC, new { @class = "form-control", @id = "txtRFC", @onblur = "return ValidarRFC(this)", autocomplete = "off" })
                            @Html.LabelFor(model => model.RFC, new { @class = "text-danger", @style = "display:none",  @id = "lblErrorRFC" })
                            @Html.ValidationMessageFor(model => model.RFC)
                        </div>
                    </div>
                    <br />
                </div>
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.IdProovedor, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProovedor, new { @class = "hidden form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.IdProovedor)
                        </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Proovedor", htmlAttributes: new { @class = "btn btn-danger", autocomplete = "off" })
                        </div>
                    </div>
                </div>
            </div>
            }

        </div>
    </div>
</div>

<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript">

    function ValidarRFC() {
        var txtRFC = $("#txtRFC");
        var regexToRFC = /^([A-Z]{3,4})([0-9]{6})([A-Z]{1})([0-9]{2})?$/;
        if (regexToRFC.test(txtRFC.val())) {
            $('#txtRFC').css('border-color', 'green');
            $("#lblErrorRFC").hide();
        }
        else {
            $('#txtRFC').css('border-color', 'red');
            $("#lblErrorRFC").text('No se Ingreso un RFC correctamente');
            $("#lblErrorRFC").show();
        }
    }


</script>